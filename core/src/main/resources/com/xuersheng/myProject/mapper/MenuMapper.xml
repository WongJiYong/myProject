<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuersheng.myProject.mapper.MenuMapper">
  <resultMap id="BaseResultMap" type="com.xuersheng.myProject.model.Menu">
    <id column="m_id" jdbcType="BIGINT" property="id" />
    <result column="m_i_frame" jdbcType="BIT" property="iFrame" />
    <result column="m_name" jdbcType="VARCHAR" property="name" />
    <result column="m_component" jdbcType="VARCHAR" property="component" />
    <result column="m_pid" jdbcType="BIGINT" property="pid" />
    <result column="m_sort" jdbcType="BIGINT" property="sort" />
    <result column="m_icon" jdbcType="VARCHAR" property="icon" />
    <result column="m_path" jdbcType="VARCHAR" property="path" />
    <result column="m_cache" jdbcType="BIT" property="cache" />
    <result column="m_enabled" jdbcType="BIT" property="enabled" />
    <result column="m_component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="m_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="m_permission" jdbcType="VARCHAR" property="permission" />
    <result column="m_type" jdbcType="INTEGER" property="type" />
    <result column="m_deleted" jdbcType="BIT" property="deleted" />
    <result column="m_version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    m.id as m_id, m.i_frame as m_i_frame, m.name as m_name, m.component as m_component, 
    m.pid as m_pid, m.sort as m_sort, m.icon as m_icon, m.path as m_path, m.cache as m_cache, 
    m.enabled as m_enabled, m.component_name as m_component_name, m.create_time as m_create_time, 
    m.permission as m_permission, m.type as m_type, m.deleted as m_deleted, m.version as m_version
  </sql>
  <select id="selectByExample" parameterType="com.xuersheng.myProject.model.example.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from menu m
    where m.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuersheng.myProject.model.example.MenuExample">
    delete from menu m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuersheng.myProject.model.Menu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into menu (i_frame, name, component,
      pid, sort, icon, path,
      cache, enabled, component_name,
      create_time, permission, type,
      deleted, version)
    values (#{iFrame,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR},
      #{pid,jdbcType=BIGINT}, #{sort,jdbcType=BIGINT}, #{icon,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{cache,jdbcType=BIT}, #{enabled,jdbcType=BIT}, #{componentName,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{permission,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
      #{deleted,jdbcType=BIT}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xuersheng.myProject.model.Menu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iFrame != null">
        i_frame,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="cache != null">
        cache,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="componentName != null">
        component_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iFrame != null">
        #{iFrame,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=BIGINT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="cache != null">
        #{cache,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="componentName != null">
        #{componentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuersheng.myProject.model.example.MenuExample" resultType="java.lang.Long">
    select count(*) from menu m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update menu m
    <set>
      <if test="record.id != null">
        m.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.iFrame != null">
        m.i_frame = #{record.iFrame,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        m.name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null">
        m.component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        m.pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.sort != null">
        m.sort = #{record.sort,jdbcType=BIGINT},
      </if>
      <if test="record.icon != null">
        m.icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        m.path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.cache != null">
        m.cache = #{record.cache,jdbcType=BIT},
      </if>
      <if test="record.enabled != null">
        m.enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.componentName != null">
        m.component_name = #{record.componentName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        m.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.permission != null">
        m.permission = #{record.permission,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        m.type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        m.deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        m.version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update menu m
    set m.id = #{record.id,jdbcType=BIGINT},
      m.i_frame = #{record.iFrame,jdbcType=BIT},
      m.name = #{record.name,jdbcType=VARCHAR},
      m.component = #{record.component,jdbcType=VARCHAR},
      m.pid = #{record.pid,jdbcType=BIGINT},
      m.sort = #{record.sort,jdbcType=BIGINT},
      m.icon = #{record.icon,jdbcType=VARCHAR},
      m.path = #{record.path,jdbcType=VARCHAR},
      m.cache = #{record.cache,jdbcType=BIT},
      m.enabled = #{record.enabled,jdbcType=BIT},
      m.component_name = #{record.componentName,jdbcType=VARCHAR},
      m.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      m.permission = #{record.permission,jdbcType=VARCHAR},
      m.type = #{record.type,jdbcType=INTEGER},
      m.deleted = #{record.deleted,jdbcType=BIT},
      m.version = #{record.version,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuersheng.myProject.model.Menu">
    update menu
    <set>
      <if test="iFrame != null">
        i_frame = #{iFrame,jdbcType=BIT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=BIGINT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="cache != null">
        cache = #{cache,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="componentName != null">
        component_name = #{componentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuersheng.myProject.model.Menu">
    update menu
    set i_frame = #{iFrame,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT},
      sort = #{sort,jdbcType=BIGINT},
      icon = #{icon,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      cache = #{cache,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      component_name = #{componentName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      permission = #{permission,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <resultMap extends="com.xuersheng.myProject.mapper.MenuMapper.BaseResultMap" id="MenusAction" type="com.xuersheng.myProject.model.Menu">
    <collection column="m_id" foreignColumn="a_menu_id" ofType="com.xuersheng.myProject.model.Action" property="actions" resultMap="com.xuersheng.myProject.mapper.ActionMapper.BaseResultMap">
    </collection>
  </resultMap>

  <select id="selectMenusByRoleId" resultMap="MenusAction">
    SELECT
    <include refid="com.xuersheng.myProject.mapper.MenuMapper.Base_Column_List" />,
    <include refid="com.xuersheng.myProject.mapper.ActionMapper.Base_Column_List" />
    FROM menu m
    LEFT JOIN action a ON m.id = a.menu_id
    WHERE 1 = 1
    AND m.id IN (SELECT rm.menu_id FROM roles_menus rm WHERE rm.role_id = #{roleId} AND rm.deleted = 0)
    AND (a.id IS NULL OR
    a.id IN (SELECT ra.action_id FROM roles_action ra WHERE ra.role_id = #{roleId} AND ra.deleted = 0))
    AND m.deleted = 0
    AND m.enabled = 1
    AND (a.deleted IS NULL OR a.deleted = 0)
    AND (a.enabled IS NULL OR a.enabled = 1)
    ORDER BY m.sort
  </select>

  <select id="selectMenus" resultMap="MenusAction">
    SELECT
    <include refid="com.xuersheng.myProject.mapper.MenuMapper.Base_Column_List" />,
    <include refid="com.xuersheng.myProject.mapper.ActionMapper.Base_Column_List" />
    FROM menu m
    LEFT JOIN action a ON m.id = a.menu_id
    <where>
      <if test="name != null">
        m.name = #{name}
      </if>
      AND m.deleted = false
      AND (a.deleted = false OR a.deleted IS NULL)
    </where>
    ORDER BY m.sort;
  </select>
</mapper>