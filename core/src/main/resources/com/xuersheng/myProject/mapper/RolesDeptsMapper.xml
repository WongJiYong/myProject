<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuersheng.myProject.mapper.RolesDeptsMapper">
  <resultMap id="BaseResultMap" type="com.xuersheng.myProject.model.RolesDepts">
    <id column="rd_role_id" jdbcType="BIGINT" property="roleId" />
    <id column="rd_dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="rd_deleted" jdbcType="BIT" property="deleted" />
    <result column="rd_version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rd.role_id as rd_role_id, rd.dept_id as rd_dept_id, rd.deleted as rd_deleted, rd.version as rd_version
  </sql>
  <select id="selectByExample" parameterType="com.xuersheng.myProject.model.example.RolesDeptsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roles_depts rd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roles_depts rd
    where rd.role_id = #{roleId,jdbcType=BIGINT}
      and rd.dept_id = #{deptId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from roles_depts
    where role_id = #{roleId,jdbcType=BIGINT}
      and dept_id = #{deptId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuersheng.myProject.model.example.RolesDeptsExample">
    delete from roles_depts rd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuersheng.myProject.model.RolesDepts">
    insert into roles_depts (role_id, dept_id, deleted, 
      version)
    values (#{roleId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{deleted,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xuersheng.myProject.model.RolesDepts">
    insert into roles_depts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuersheng.myProject.model.example.RolesDeptsExample" resultType="java.lang.Long">
    select count(*) from roles_depts rd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update roles_depts rd
    <set>
      <if test="record.roleId != null">
        rd.role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.deptId != null">
        rd.dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null">
        rd.deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        rd.version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update roles_depts rd
    set rd.role_id = #{record.roleId,jdbcType=BIGINT},
      rd.dept_id = #{record.deptId,jdbcType=BIGINT},
      rd.deleted = #{record.deleted,jdbcType=BIT},
      rd.version = #{record.version,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuersheng.myProject.model.RolesDepts">
    update roles_depts
    <set>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
      and dept_id = #{deptId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuersheng.myProject.model.RolesDepts">
    update roles_depts
    set deleted = #{deleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
      and dept_id = #{deptId,jdbcType=BIGINT}
  </update>
</mapper>