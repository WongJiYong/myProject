<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuersheng.myProject.mapper.UserSettingMapper">
  <resultMap id="BaseResultMap" type="com.xuersheng.myProject.model.UserSetting">
    <id column="us_id" jdbcType="BIGINT" property="id" />
    <result column="us_user_id" jdbcType="BIGINT" property="userId" />
    <result column="us_role_id" jdbcType="BIGINT" property="roleId" />
    <result column="us_page_size" jdbcType="INTEGER" property="pageSize" />
    <result column="us_deleted" jdbcType="BIT" property="deleted" />
    <result column="us_version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    us.id as us_id, us.user_id as us_user_id, us.role_id as us_role_id, us.page_size as us_page_size, 
    us.deleted as us_deleted, us.version as us_version
  </sql>
  <select id="selectByExample" parameterType="com.xuersheng.myProject.model.example.UserSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_setting us
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_setting us
    where us.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuersheng.myProject.model.example.UserSettingExample">
    delete from user_setting us
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuersheng.myProject.model.UserSetting">
    insert into user_setting (id, user_id, role_id, 
      page_size, deleted, version
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, 
      #{pageSize,jdbcType=INTEGER}, #{deleted,jdbcType=BIT}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xuersheng.myProject.model.UserSetting">
    insert into user_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="pageSize != null">
        page_size,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="pageSize != null">
        #{pageSize,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuersheng.myProject.model.example.UserSettingExample" resultType="java.lang.Long">
    select count(*) from user_setting us
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_setting us
    <set>
      <if test="record.id != null">
        us.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        us.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        us.role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.pageSize != null">
        us.page_size = #{record.pageSize,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        us.deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        us.version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_setting us
    set us.id = #{record.id,jdbcType=BIGINT},
      us.user_id = #{record.userId,jdbcType=BIGINT},
      us.role_id = #{record.roleId,jdbcType=BIGINT},
      us.page_size = #{record.pageSize,jdbcType=INTEGER},
      us.deleted = #{record.deleted,jdbcType=BIT},
      us.version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuersheng.myProject.model.UserSetting">
    update user_setting
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="pageSize != null">
        page_size = #{pageSize,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuersheng.myProject.model.UserSetting">
    update user_setting
    set user_id = #{userId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      page_size = #{pageSize,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>