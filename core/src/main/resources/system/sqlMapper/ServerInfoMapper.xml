<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuersheng.myProject.mapper.ServerInfoMapper">
  <resultMap id="BaseResultMap" type="com.xuersheng.myProject.model.ServerInfo">
    <id column="si_id" jdbcType="INTEGER" property="id" />
    <result column="si_ip" jdbcType="VARCHAR" property="ip" />
    <result column="si_name" jdbcType="VARCHAR" property="name" />
    <result column="si_type" jdbcType="INTEGER" property="type" />
    <result column="si_detail" jdbcType="VARCHAR" property="detail" />
    <result column="si_username" jdbcType="VARCHAR" property="username" />
    <result column="si_password" jdbcType="VARCHAR" property="password" />
    <result column="si_catalog_id" jdbcType="INTEGER" property="catalogId" />
    <result column="si_modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="si_connectable" jdbcType="BIT" property="connectable" />
    <result column="si_mounted_on" jdbcType="VARCHAR" property="mountedOn" />
    <result column="si_disk_total" jdbcType="INTEGER" property="diskTotal" />
    <result column="si_disk_used" jdbcType="INTEGER" property="diskUsed" />
    <result column="si_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="si_deleted" jdbcType="BIT" property="deleted" />
    <result column="si_version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    si.id as si_id, si.ip as si_ip, si.name as si_name, si.type as si_type, si.detail as si_detail, 
    si.username as si_username, si.password as si_password, si.catalog_id as si_catalog_id, 
    si.modified_time as si_modified_time, si.connectable as si_connectable, si.mounted_on as si_mounted_on, 
    si.disk_total as si_disk_total, si.disk_used as si_disk_used, si.update_time as si_update_time, 
    si.deleted as si_deleted, si.version as si_version
  </sql>
  <select id="selectByExample" parameterType="com.xuersheng.myProject.model.example.ServerInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from server_info si
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from server_info si
    where si.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from server_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuersheng.myProject.model.example.ServerInfoExample">
    delete from server_info si
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuersheng.myProject.model.ServerInfo">
    insert into server_info (id, ip, name, 
      type, detail, username, 
      password, catalog_id, modified_time, 
      connectable, mounted_on, disk_total, 
      disk_used, update_time, deleted, 
      version)
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{catalogId,jdbcType=INTEGER}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{connectable,jdbcType=BIT}, #{mountedOn,jdbcType=VARCHAR}, #{diskTotal,jdbcType=INTEGER}, 
      #{diskUsed,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xuersheng.myProject.model.ServerInfo">
    insert into server_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="catalogId != null">
        catalog_id,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="connectable != null">
        connectable,
      </if>
      <if test="mountedOn != null">
        mounted_on,
      </if>
      <if test="diskTotal != null">
        disk_total,
      </if>
      <if test="diskUsed != null">
        disk_used,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="catalogId != null">
        #{catalogId,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectable != null">
        #{connectable,jdbcType=BIT},
      </if>
      <if test="mountedOn != null">
        #{mountedOn,jdbcType=VARCHAR},
      </if>
      <if test="diskTotal != null">
        #{diskTotal,jdbcType=INTEGER},
      </if>
      <if test="diskUsed != null">
        #{diskUsed,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuersheng.myProject.model.example.ServerInfoExample" resultType="java.lang.Long">
    select count(*) from server_info si
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update server_info si
    <set>
      <if test="record.id != null">
        si.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        si.ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        si.name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        si.type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null">
        si.detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        si.username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        si.password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.catalogId != null">
        si.catalog_id = #{record.catalogId,jdbcType=INTEGER},
      </if>
      <if test="record.modifiedTime != null">
        si.modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.connectable != null">
        si.connectable = #{record.connectable,jdbcType=BIT},
      </if>
      <if test="record.mountedOn != null">
        si.mounted_on = #{record.mountedOn,jdbcType=VARCHAR},
      </if>
      <if test="record.diskTotal != null">
        si.disk_total = #{record.diskTotal,jdbcType=INTEGER},
      </if>
      <if test="record.diskUsed != null">
        si.disk_used = #{record.diskUsed,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        si.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        si.deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        si.version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update server_info si
    set si.id = #{record.id,jdbcType=INTEGER},
      si.ip = #{record.ip,jdbcType=VARCHAR},
      si.name = #{record.name,jdbcType=VARCHAR},
      si.type = #{record.type,jdbcType=INTEGER},
      si.detail = #{record.detail,jdbcType=VARCHAR},
      si.username = #{record.username,jdbcType=VARCHAR},
      si.password = #{record.password,jdbcType=VARCHAR},
      si.catalog_id = #{record.catalogId,jdbcType=INTEGER},
      si.modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      si.connectable = #{record.connectable,jdbcType=BIT},
      si.mounted_on = #{record.mountedOn,jdbcType=VARCHAR},
      si.disk_total = #{record.diskTotal,jdbcType=INTEGER},
      si.disk_used = #{record.diskUsed,jdbcType=INTEGER},
      si.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      si.deleted = #{record.deleted,jdbcType=BIT},
      si.version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuersheng.myProject.model.ServerInfo">
    update server_info
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="catalogId != null">
        catalog_id = #{catalogId,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectable != null">
        connectable = #{connectable,jdbcType=BIT},
      </if>
      <if test="mountedOn != null">
        mounted_on = #{mountedOn,jdbcType=VARCHAR},
      </if>
      <if test="diskTotal != null">
        disk_total = #{diskTotal,jdbcType=INTEGER},
      </if>
      <if test="diskUsed != null">
        disk_used = #{diskUsed,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuersheng.myProject.model.ServerInfo">
    update server_info
    set ip = #{ip,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      catalog_id = #{catalogId,jdbcType=INTEGER},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      connectable = #{connectable,jdbcType=BIT},
      mounted_on = #{mountedOn,jdbcType=VARCHAR},
      disk_total = #{diskTotal,jdbcType=INTEGER},
      disk_used = #{diskUsed,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>